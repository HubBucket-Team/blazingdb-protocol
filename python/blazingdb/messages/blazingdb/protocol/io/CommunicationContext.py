# automatically generated by the FlatBuffers compiler, do not modify

# namespace: io

import flatbuffers

class CommunicationContext(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsCommunicationContext(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = CommunicationContext()
        x.Init(buf, n + offset)
        return x

    # CommunicationContext
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # CommunicationContext
    def Nodes(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from .CommunicationNode import CommunicationNode
            obj = CommunicationNode()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # CommunicationContext
    def NodesLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # CommunicationContext
    def MasterIndex(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CommunicationContext
    def Token(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint64Flags, o + self._tab.Pos)
        return 0

def CommunicationContextStart(builder): builder.StartObject(3)
def CommunicationContextAddNodes(builder, nodes): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(nodes), 0)
def CommunicationContextStartNodesVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def CommunicationContextAddMasterIndex(builder, masterIndex): builder.PrependInt32Slot(1, masterIndex, 0)
def CommunicationContextAddToken(builder, token): builder.PrependUint64Slot(2, token, 0)
def CommunicationContextEnd(builder): return builder.EndObject()
